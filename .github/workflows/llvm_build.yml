name: llvm_build
on:
  workflow_dispatch:
    inputs:
      FILE:
        type: choice
        description: "配置文件"
        required: true
        default: oneplus_10_pro_v
        options:
          - oneplus_nord_ce4_v
          - oneplus_ace_3v_v
          - oneplus_nord_4_v
          - oneplus_10_pro_v
          - oneplus_10t_v

jobs:
  build:
    name: build_main
    runs-on: ubuntu-latest
    env:
      CPU: ${{ needs.get-config.outputs.CPU }}
      CPUD: ${{ needs.get-config.outputs.CPUD }}
      ANDROID_VERSION: ${{ needs.get-config.outputs.ANDROID_VERSION }}
      KERNEL_VERSION: ${{ needs.get-config.outputs.KERNEL_VERSION }}
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_MAXSIZE: 8G
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Disk Space
        run: |
          df -h
          uname -a

      - name: Clean Build Space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 8192
          swap-size-mb: 32768
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true

      - name: Setup TimeZone
        run: |
          sudo -E rm -rf /etc/localtime
          sudo -E ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: Configure Git
        run: |
          git config --global user.name "Numbersf"
          git config --global user.email "263623064@qq.com"

      - name: Configure APTC
        run: |
          APT_CACHE_DIR="$HOME/apt-cache"
          mkdir -p "$APT_CACHE_DIR"/{archives,lists/partial}
          echo "Dir::Cache \"$APT_CACHE_DIR\";" | sudo tee /etc/apt/apt.conf.d/90user-cache
          echo "Dir::Cache::archives \"$APT_CACHE_DIR/archives\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Dir::State::lists \"$APT_CACHE_DIR/lists\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Acquire::Check-Valid-Until \"false\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Acquire::Languages \"none\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          sudo chown -R $USER:$USER "$APT_CACHE_DIR"

      - name: Set APT Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.HOME }}/apt-cache
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/OriginBuild.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Install Dependencies
        run: |
          sudo rm -f /var/lib/apt/lists/lock /var/lib/dpkg/lock
          APT_CACHE_DIR="$HOME/apt-cache"
          mkdir -p "$APT_CACHE_DIR/lists/partial"
          sudo apt -o Dir::Cache="$APT_CACHE_DIR" update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt -o Dir::Cache="$APT_CACHE_DIR" install -yq --no-install-recommends \
            python3 git curl ccache libelf-dev \
            build-essential flex bison libssl-dev \
            libncurses-dev liblz4-tool zlib1g-dev \
            libxml2-utils rsync unzip curl bison flex \
            make binutils dwarves git lld pahole zip \
            perl make gcc python3 python-is-python3 \
            bc libssl-dev libelf-dev clang wget cmake python3 \
            clang cmake make llvm wget
          sudo DEBIAN_FRONTEND=noninteractive apt -o Dir::Cache="$APT_CACHE_DIR" install -yq --no-install-recommends \
            lsb-release linux-modules-extra-"$(uname -r)" ccache pahole \
            git automake flex bison build-essential zlib1g-dev make \
            libelf-dev libssl-dev openssl bc device-tree-compiler gzip \
            python3-telethon python-is-python3 zip unzip zstd libzstd-dev pigz \
            libncurses-dev asciidoc dos2unix lz4 fakeroot python3 python3-pip \
            gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi gcc-arm-linux-gnueabihf \
            libc6-dev-armel-cross libc6-dev-armhf-cross libc6-dev-arm64-cross
          sudo apt install build-essential zlib1g-dev libncurses5-dev libxml2-dev
          sudo -E apt-get clean
          df -h

      - name: Optimize Memory Management
        run: |
          sudo -E sysctl vm.swappiness=1
          sudo -E sysctl vm.min_free_kbytes=32768
          sudo -E sysctl vm.watermark_scale_factor=100
          sudo -E sysctl vm.watermark_boost_factor=15000
          sudo -E sysctl vm.overcommit_memory=1
          sudo -E sysctl vm.page-cluster=0
          sudo -E modprobe zram
          echo "0" | sudo -E tee /sys/class/block/zram0/mem_limit
          echo "zstd" | sudo -E tee /sys/class/block/zram0/comp_algorithm
          echo "$(awk 'NR==1{print $2*1000}' </proc/meminfo)" | sudo -E tee /sys/class/block/zram0/disksize
          sudo -E mkswap /dev/zram0
          sudo -E swapon -p 100 /dev/zram0
          echo "Y" | sudo -E tee /sys/kernel/mm/lru_gen/enabled
          echo "1000" | sudo -E tee /sys/kernel/mm/lru_gen/min_ttl_ms
          echo "1" | sudo -E tee /sys/kernel/mm/swap/vma_ra_enabled

      - name: Install Repo Tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize Repo and Sync
        run: |
          mkdir llvm-toolchain && cd llvm-toolchain
          repo init -u https://android.googlesource.com/platform/manifest -b llvm-toolchain --depth 1
          repo sync -c -j$(nproc --all) --no-tags --no-clone-bundle --force-sync

      - name: Build
        run: |
          cd llvm-toolchain
          python toolchain/llvm_android/build.py \
              --lto --bolt \
              --no-build windows